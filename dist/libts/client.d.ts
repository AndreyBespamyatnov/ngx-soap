import { WSDL } from "./wsdl";
export declare class Client {
    lastResponseHeaders: any;
    lastResponse: string;
    endpoint: any;
    bodyAttributes: any;
    lastRequestHeaders: any;
    lastEndpoint: any;
    lastRequest: any;
    lastMessage: string;
    security: any;
    httpHeaders: any;
    streamAllowed: any;
    SOAPAction: any;
    soapHeaders: any;
    wsdl: WSDL;
    constructor(wsdl: WSDL, endpoint?: any, options?: any);
    addSoapHeader(soapHeader: any, name: any, namespace: any, xmlns: any): number;
    changeSoapHeader(index: any, soapHeader: any, name: any, namespace: any, xmlns: any): void;
    getSoapHeaders(): any;
    clearSoapHeaders(): void;
    addHttpHeader(name: any, value: any): void;
    getHttpHeaders(): any;
    clearHttpHeaders(): void;
    addBodyAttribute(bodyAttribute: any, name: any, namespace: any, xmlns: any): void;
    getBodyAttributes(): any;
    clearBodyAttributes(): void;
    setEndpoint(endpoint: any): void;
    describe(): any;
    setSecurity(security: any): void;
    setSOAPAction(SOAPAction: any): void;
    private _initializeServices(endpoint);
    private _initializeOptions(options?);
    private _defineService(service, endpoint);
    private _definePort(port, endpoint);
    private _defineMethod(method, location);
    private _invoke(method, args, location, callback, options, extraHeaders);
}
