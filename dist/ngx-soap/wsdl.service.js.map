{"version":3,"sources":["../../ngx-soap/wsdl.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,IAAA,EAAc,MAAO,eAAA,CAAgB;AAC9C,OAAO,EAAQ,QAAA,EAAS,MAAO,eAAA,CAAgB;AAG/C;IAEE,qBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IAEL,8BAAQ,GAAR,UAAS,GAAQ,EAAE,OAAiB;QAAjB,wBAAA,EAAA,YAAiB;QAClC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACvC,kBAAkB;QAClB,+BAA+B;QAC/B,KAAK;QACL,8BAA8B;QAE9B,mEAAmE;QACrE,MAAM;IACR,CAAC;IAQH,kBAAC;AAAD,CAvBA,AAuBC;;AAPM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,IAAI,GAAG;CACb,EAF6F,CAE7F,CAAC","file":"wsdl.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { WSDL, openWsdl } from '../libts/wsdl';\n\n\nexport class WSDLService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  openWsdl(url: any, options: any = {}): Promise<WSDL> {\n    return openWsdl(url, this.http, options);\n      // .then(wsdl => {\n      //   resolve(new Client(wsdl));\n      // })\n      // .catch(err => reject(err));\n    \n      // else resolve(wsdl && new Client(wsdl, endpoint, http, options));\n    // });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}